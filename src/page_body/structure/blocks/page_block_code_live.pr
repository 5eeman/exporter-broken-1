{* Fetch block from injection context, expected type 'Code' *}
{[ const block = context /]}

{* Set background color *}
{[ let backgroundColor = "#f9f9fa" /]}
{[ if block.backgroundColor ]}
    {[ backgroundColor = block.backgroundColor /]}
{[/]}

{* Generate unique ID for the sandbox, and retrieve its configuration *}
{[ const sandboxId = randomInt(0, 99999999).toString().prefixed("sandbox-") /]}

{* Generate sandbox code which will be automatically converted to live sandbox *}
<div class="sandbox-main-wrapper">
    <div class="sandbox-state-wrapper">
        <div class="sandbox-loader-container" data-target="{{ sandboxId }}">
            <div class="sandbox-loader"></div>
        </div>
        <div class="sandbox-container checkered-background-light" style="height: {{ block.height.toString() }}px; background-color: {{ backgroundColor }}">
            <div id="{{ sandboxId }}" sn-sandbox-data="{{ block.sandboxData }}"></div>
        </div>
    </div>
    <div class="sandbox-container-meta">

        <div class="sandbox-container-buttons">
            <span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Toggle code" data-offset="5">
                <i class="fas fa-code" data-toggle="collapse" data-target="#codepreview-{{ sandboxId }}"></i>
            </span>
            <span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Copy code">
                <i class="fas fa-copy" data-toggle="copy-from-sandbox" data-target="{{ sandboxId }}"></i>
            </span>
        </div>

        {[ let shouldShow = "" /]}
        {[ if block.showCode ]}
            {[ shouldShow = "show" /]}
        {[/]}
        <div class="sandbox-text collapse {{ shouldShow }}" id="codepreview-{{ sandboxId }}">
            <pre><code class="language-javascript">

            {{ htmlSafeString(block.code) }}
            
            </code></pre>
        </div>
    </div>
</div>