{* Fetch block from injection context, expected type 'Code' *}
{[ const block = context /]}

{* Set background color *}
{[ let backgroundColor = "#f9f9fa" /]}
{[ if block.backgroundColor ]}
    {[ backgroundColor = block.backgroundColor /]}
{[/]}

{* Generate unique ID for the sandbox, and retrieve its configuration *}
{[ const sandboxId = randomInt(0, 99999999).toString().prefixed("sandbox-") /]}

{* Generate sandbox code which will be automatically converted to live sandbox *}
<div class="sandbox-main-wrapper">
    {* Render sandbox. Sandbox will be triggered by the library automatically, this is just wrapper *}
    <div class="sandbox-state-wrapper">
        <div class="sandbox-loader-container" data-target="{{ sandboxId }}">
            <div class="sandbox-loader"></div>
        </div>
        <div class="sandbox-container checkered-background-light" style="height: {{ block.height.toString() }}px; background-color: {{ backgroundColor }}">
            <div id="{{ sandboxId }}" sn-sandbox-data="{{ block.sandboxData }}"></div>
        </div>
    </div>
    {* Only show code if the editor allows it *}
    {[ if block.showCode ]}
    <div class="sandbox-container-meta">

        <div class="sandbox-container-buttons">
        {* Toggle code button *}
        <a class="btn btn-light" data-toggle="collapse" href="#codepreview-{{ sandboxId }}" role="button" aria-expanded="false" aria-controls="collapseExample">
            Toggle code
        </a>

        {* Copy code button *}
        <a class="btn btn-light sandbox-copy" data-toggle="tooltip" title="Copy component code">
            <div class="sandbox-copy-icon" data-toggle="copy-from-sandbox" data-target="{{ sandboxId }}"></div>
        </a>
        </div>

        {* Rendered code *}
        <div class="sandbox-text collapse" id="codepreview-{{ sandboxId }}">
            <pre><code class="language-javascript">
            {{ htmlSafeString(block.code) }}
            </code></pre>
        </div>
    </div>
    {[/]}
</div>